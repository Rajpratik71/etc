############################################################
# VARIABLES FOR THIS SCRIPT
############################################################
WOLFWZR_HOME=~wolfwzr
if [ "$(uname -s)" = "Darwin" ]
then
    OS_TYPE="osx"
else
    OS_TYPE="linux"
fi

if [ "$OS_TYPE" = "linux" ]
then
    grep "model name" /proc/cpuinfo | grep -s -q "Atom" && CPU_TYPE="Atom"
fi

############################################################
# BASH PREFERENCES
############################################################
set -o vi
export EDITOR=vim

# PATH
function append_to_path()
{
    local new_path=$1

    [ -z "$new_path" ] && return
    grep -s -q ":${new_path}:" <<< "$PATH" || grep -s -q ":$new_path$" <<< "$PATH" 
    [ $? -ne 0 ] && PATH="$PATH:$new_path"
    export PATH
}
function uniq_path()
{
    eval "export PATH=\"$(tr ':' '\n' <<< "$PATH" | sort -r | uniq \
                        | tr '\n' ':' | sed 's/:$//g')\""
}
append_to_path "/bin"
append_to_path "/sbin"
append_to_path "/usr/bin"
append_to_path "/usr/sbin"
append_to_path "/usr/local/bin"
append_to_path "/usr/local/sbin"
if [ "$OS_TYPE" = "osx" ]
then
    append_to_path "$WOLFWZR_HOME/.local/bin"
else
    append_to_path "/opt/cross-mips32/bin"
fi
uniq_path

export HISTTIMEFORMAT="[%m-%d %R] "

if [ "$OS_TYPE" = "linux" -a "$CPU_TYPE" = "Atom" ]
then
    w | grep " w$" | awk '{print $3}' | grep -s -q ":"
    [ $? -ne 0 ] && export LC_ALL=zh_CN.utf8
fi
############################################################
# COMMAND PROMPT
############################################################
function wolf_update_ps1()
{
    local exit_code=$?
    local last_cmd_exit_code
    local time
    local username
    local work_dir
    local prefix
    local suffix

    if [ $exit_code -eq 0 ] 
    then
        if [ "$TERMINAL_PROFILE" = "Light" ]
        then
            last_cmd_exit_code="\[\033[47;37m\]"
        else
            last_cmd_exit_code="\[\033[40;37m\]"
        fi
    else
        # reverse on error
        last_cmd_exit_code="\[\033[35;7m\]${exit_code}✘"
    fi
    prefix="\[\033[37m\]["
    time="\[\033[36m\]\t"
    if [ $(id -u) = '0' ]
    then
        username="\[\033[36m\]\u"
    else
        username="\[\033[37m\]\u"
    fi
    work_dir="\[\033[33m\]\W"
    suffix="\[\033[37m\]]\[\033[0m\] "

    export PS1="$last_cmd_exit_code$prefix$time $username $work_dir$suffix"
}
export PROMPT_COMMAND="wolf_update_ps1"
#export PROMPT_DIRTRIM=

############################################################
# BASH COMPLETION
############################################################
if [ -f "$(brew --prefix)/etc/bash_completion" ]; then
    . "$(brew --prefix)/etc/bash_completion"
fi

############################################################
# ALIAS
############################################################
alias a='./a.out'
alias c='clear'
alias h='history | less +G'
alias d='du -sh'
if [ "$OS_TYPE" = "osx" ] 
then
    alias r='netstat -f inet -nr'
    alias ls='ls -G'
    alias ll='ls -Glh'
    alias la='ls -GlhA'
    alias top='top -o cpu'
    alias um='diskutil umount'
    alias briss="java -jar $WOLFWZR_HOME/.local/share/briss-0.9/briss-0.9.jar"
    alias cpwd='printf $PWD | pbcopy'
    alias df='df -Ph'
    alias ds='d * | sort -g'
else
    alias r='route -n'
    alias ls='ls --color=auto'
    alias ll='ls --color=auto -lh'
    alias la='ls --color=auto -lhA'
    alias briss='java -jar /usr/local/briss/briss-0.9/briss-0.9.jar'
    alias cpwd='printf $PWD | xclip -selection clipboard'
    alias open='xdg-open'
    alias m='mplayer -zoom'
    alias mkd='Markdown.pl --html4tags'
    alias wz='/home/wolfwzr/usr/src/WizNote/WizNote'
    alias df='df -PTh'
    alias ds='d * | sort -h'
fi
alias o='open'
alias lb='lsblk'
alias ..='cd ..'
alias ...='cd ../..'
alias u='cd ..'
alias uu='cd ../..'
alias u3='cd ../../..'
alias u4='cd ../../../..'
alias u5='cd ../../../../..'
alias u6='cd ../../../../../..'
alias sdcv='sdcv --color --utf8-input --utf8-output'
alias iconvcat='iconv -f gbk -t utf8'
alias man_cn='LANG=zh_CN.utf8 man'
alias info='info --vi-keys'
alias grep='grep --color=auto'
alias pgrep='pgrep -lf'
alias hgrep='history | grep -i'
alias h='history | less +G --'
alias j='jobs -l'
alias wget='wget -c'

alias o='open'
alias g='grep'
alias pg='ps -elf | grep -i'

alias s='source /etc/wolfwzr.bashrc'

# alias for vi
# environment variable for vim script - vim-colorselector
export DOTVIM="$WOLFWZR_HOME/.vim/bundle/vim-colorschemes"
# variable for cscope
export CSCOPE_EDITOR=vim
alias vi='gvim'
alias vibashrc='gvim /etc/wolfwzr.bashrc'
alias vimbashrc='vim /etc/wolfwzr.bashrc'
alias virc="gvim $WOLFWZR_HOME/.vim/vimrc"
alias vimrc="vim $WOLFWZR_HOME/.vim/vimrc"
alias visshconf='gvim ~wolfwzr/.ssh/config'
alias vimsshconf='vim ~wolfwzr/.ssh/config'
alias vihosts='gvim /etc/hosts'
alias vimhosts='vim /etc/hosts'
if [ "$OS_TYPE" = "osx" ]
then
    alias vismbconf='gvim /usr/local/etc/smb.conf'
    alias vimsmbconf='vim /usr/local/etc/smb.conf'
else
    alias vismbconf='gvim /etc/samba/smb.conf'
    alias vimsmbconf='vim /etc/samba/smb.conf'
fi

############################################################
# z - a better cd
############################################################
if [ "$OS_TYPE" = "osx" ]
then
    source /usr/local/etc/profile.d/z.sh
fi

############################################################
# DIR SHORTCUT
############################################################
if [ "$OS_TYPE" = "osx" ]
then
    # Github
    gh="/Users/wolfwzr/Documents/git/github/wolfwzr"
    alias ggh='cd "$gh"'
    # WorkSpace
    ws="$gh/kernel_learning"
    alias gws='cd "$ws"'
    # WorkSpace2
    ws2="/Users/wolfwzr/Books/My OS/x86汇编语言:从实模式到保护模式/booktool/code/c14"
    alias gws2='cd "$ws2"'
    # BrewHome
    bh="/usr/local/Cellar/"
    alias gbh='cd "$bh"'
    # HomeBin(~/.local/bin)
    hb="/Users/wolfwzr/.local/bin"
    alias ghb='cd "$hb"'
    # MountFolder
    mf="/Volumes/"
    alias gmf='cd "$mf"'
    # SAE (Sina App Engine)
    sae='/Users/wolfwzr/Documents/svn/sae/mail4wolfwzr/mail4wolfwzr/1'
    alias gsae='cd $sae'
else
    hse='/home/wolfwzr/Documents/scanner/svn/scanner/user/modules/hse'
    alias ghse='cd $hse'
    ws='/windows/E/Documents/Computer/program/os/李忠系列/booktool/code/c14'
    alias gws='cd $ws'
    sae='/home/wolfwzr/Documents/myprojects/sae/mail4wolfwzr/mail4wolfwzr/1'
    alias gsae='cd $sae'
fi

############################################################
# Service control
############################################################
function wolf_service_control()
{
    # function parameter
    #   $1 - service name (eg. smb|ssh|http)
    #   $2 - action (eg. start|stop|restart|status)

    local service_name=$1
    local action=$2
    local service_script="/etc/init.d/$service_name"

    [ "$OS_TYPE" != "linux" ] && echo "Only avaliable in linux" && return 1
    [ -z "$service_name" ] && echo "please specific a service name" && return 2
    if [ ! -e "$service_script" ]
    then
        echo "$service_script: no such service"
        return 3
    fi

    case "$action" in
        "status")
            sudo $service_script status
            ;;
        "start")
            sudo $service_script start
            ;;
        "stop")
            sudo $service_script stop
            ;;
        "restart")
            sudo $service_script stop
            sudo $service_script start
            ;;
        *)
            echo "$action: Invalid action, use [status|start|stop|restart]"
            ;;
    esac
}

function wstatus()
{
    wolf_service_control "$1" status
}

function wstart()
{
    wolf_service_control "$1" start
}

function wstop()
{
    wolf_service_control "$1" stop
}

function wrestart()
{
    wolf_service_control "$1" restart
}

############################################################
# MISCS
############################################################
if [ "$OS_TYPE" = "linux" ]
then
    export MANPAGER="most -s"
    if [ "$DESKTOP_SESSION" = "xfce4" ]
    then
        resize -s 30 100 > /dev/null
    fi
fi

# vim: set ft=sh:
